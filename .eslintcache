[{"D:\\KMB-37\\NatJS\\nat js\\src\\index.tsx":"1","D:\\KMB-37\\NatJS\\nat js\\src\\redux\\state.ts":"2","D:\\KMB-37\\NatJS\\nat js\\src\\App.tsx":"3","D:\\KMB-37\\NatJS\\nat js\\src\\redux\\currencyReducer.ts":"4","D:\\KMB-37\\NatJS\\nat js\\src\\lessons\\lesson1\\lesson1.tsx":"5","D:\\KMB-37\\NatJS\\nat js\\src\\redux\\actions.ts":"6","D:\\KMB-37\\NatJS\\nat js\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"7","D:\\KMB-37\\NatJS\\nat js\\src\\redux\\selector.ts":"8","D:\\KMB-37\\NatJS\\nat js\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"9","D:\\KMB-37\\NatJS\\nat js\\src\\lessons\\lesson2\\lesson2.tsx":"10"},{"size":319,"mtime":1609752860853,"results":"11","hashOfConfig":"12"},{"size":286,"mtime":1609751766196,"results":"13","hashOfConfig":"12"},{"size":609,"mtime":1615760027682,"results":"14","hashOfConfig":"12"},{"size":1719,"mtime":1615120102164,"results":"15","hashOfConfig":"12"},{"size":849,"mtime":1615119017855,"results":"16","hashOfConfig":"12"},{"size":1709,"mtime":1615119812398,"results":"17","hashOfConfig":"12"},{"size":4216,"mtime":1615120160602,"results":"18","hashOfConfig":"12"},{"size":593,"mtime":1615119017886,"results":"19","hashOfConfig":"12"},{"size":3871,"mtime":1609757735301,"results":"20","hashOfConfig":"12"},{"size":5670,"mtime":1615760939494,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"q67ay8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KMB-37\\NatJS\\nat js\\src\\index.tsx",[],["45","46"],"D:\\KMB-37\\NatJS\\nat js\\src\\redux\\state.ts",[],"D:\\KMB-37\\NatJS\\nat js\\src\\App.tsx",[],"D:\\KMB-37\\NatJS\\nat js\\src\\redux\\currencyReducer.ts",[],"D:\\KMB-37\\NatJS\\nat js\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\KMB-37\\NatJS\\nat js\\src\\redux\\actions.ts",["47"],"import {useDispatch} from \"react-redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\r\n    CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\r\n    CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\r\n}\r\n\r\n\r\nexport type ChangeCurrencyFieldType = {\r\n\r\n    payload: {\r\n        amountOfBYN: string\r\n        amountOfCurrency: string\r\n    }\r\n    type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE\r\n};\r\n\r\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string): ChangeCurrencyFieldType => {\r\n    return {\r\n        payload: {\r\n            amountOfBYN,\r\n            amountOfCurrency\r\n        },\r\n        type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE\r\n    }\r\n};\r\n\r\nexport type ChangeAction = {\r\n    payload: { isBuying: boolean }\r\n    type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION\r\n};\r\n\r\n\r\nexport const ChangeActionAC = (isBuying: boolean): ChangeAction => {\r\n    return {\r\n        payload: {\r\n            isBuying\r\n        },\r\n        type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION\r\n    }\r\n};\r\n\r\nexport type ChangeCurrentCurrencyType = {\r\n    payload: { currentCurrency: string }\r\n    type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY\r\n};\r\n\r\nexport const СhangeCurrentCurrencyAC = (currentCurrency: string): ChangeCurrentCurrencyType => {\r\n    return {\r\n        payload: {\r\n            currentCurrency\r\n        },\r\n        type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY\r\n    }\r\n};\r\n\r\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType;\r\n\r\nexport function typedDispatch() {\r\n    const dispatch = useDispatch();\r\n    return (ac: CurrencyReducersTypes) => dispatch(ac)\r\n}","D:\\KMB-37\\NatJS\\nat js\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["48","49","50","51","52","53"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    СhangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes, typedDispatch\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {selectCurrencyState} from \"../../redux/selector\";\r\n\r\n/*interface IProps extends CurrencyState {\r\n    ChangeActionAC: Function;\r\n    ChangeCurrencyFieldAC: Function;\r\n    СhangeCurrentCurrencyAC: Function;\r\n}*/\r\n\r\nexport const CurrencyEContainer: React.FC = () => {\r\n    const dispatch = typedDispatch()\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectCurrencyState);\r\n    //const dispatch = useDispatch()\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        e.currentTarget.dataset.currency && dispatch(СhangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n/*const mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n    return {\r\n        currencies: currency.currencies,\r\n        currentCurrency: currency.currentCurrency,\r\n        isBuying: currency.isBuying,\r\n        amountOfBYN: currency.amountOfBYN,\r\n        amountOfCurrency: currency.amountOfCurrency,\r\n    };\r\n};*/\r\n\r\n// @ts-ignore\r\n/*\r\nconst mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n    return {\r\n        setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n            dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n        },\r\n        setAction(isBuying: boolean) {\r\n            dispatch(ChangeActionAC(isBuying));\r\n        },\r\n        changeCurrency(currency: string) {\r\n            dispatch(СhangeCurrentCurrencyAC(currency));\r\n        },\r\n    };\r\n};\r\n\r\n// @ts-ignore\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype TProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CurrencyEContainer);\r\n*/\r\n\r\n","D:\\KMB-37\\NatJS\\nat js\\src\\redux\\selector.ts",[],"D:\\KMB-37\\NatJS\\nat js\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\KMB-37\\NatJS\\nat js\\src\\lessons\\lesson2\\lesson2.tsx",["54","55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":2,"message":"63","line":61,"column":22,"nodeType":"64","endLine":61,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":3,"column":9,"nodeType":"64","messageId":"67","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"68","line":4,"column":9,"nodeType":"64","messageId":"67","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":9,"column":5,"nodeType":"64","messageId":"67","endLine":9,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":11,"column":9,"nodeType":"64","messageId":"67","endLine":11,"endColumn":16},{"ruleId":"65","severity":1,"message":"71","line":11,"column":18,"nodeType":"64","messageId":"67","endLine":11,"endColumn":32},{"ruleId":"65","severity":1,"message":"72","line":11,"column":34,"nodeType":"64","messageId":"67","endLine":11,"endColumn":45},{"ruleId":"65","severity":1,"message":"73","line":130,"column":16,"nodeType":"64","messageId":"67","endLine":130,"endColumn":26},{"ruleId":"65","severity":1,"message":"74","line":176,"column":5,"nodeType":"64","messageId":"67","endLine":176,"endColumn":9},{"ruleId":"65","severity":1,"message":"75","line":193,"column":9,"nodeType":"64","messageId":"67","endLine":193,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":201,"column":1,"nodeType":"78","endLine":202,"endColumn":3},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"typedDispatch\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","unusedVar","'Dispatch' is defined but never used.","'CurrencyReducersTypes' is defined but never used.","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'useDispatch' is defined but never used.","'multiCount' is defined but never used.","'list' is assigned a value but never used.","'printList' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]